///////////////////////////////////////////////////////////////////////////////
// ModuleTestServices.h

#pragma once

#include "TcServices.h"

const ULONG DrvID_ModuleTest = 0x3F000000;
#define SRVNAME_MODULETEST "ModuleTest"

///<AutoGeneratedContent id="ClassIDs">
const CTCID CID_ModuleTestCModuleTest = {0xf02a5a57,0xd261,0x4db6,{0xa0,0x6d,0xa7,0xfb,0xbc,0x0b,0x58,0x25}};
///</AutoGeneratedContent>

///<AutoGeneratedContent id="ParameterIDs">
const PTCID PID_ModuleTestParameter = 0x00000001;
const PTCID PID_ModuleTestTestAxisGroup_Interface = 0x00000002;
const PTCID PID_ModuleTestTestSpindle_Interface = 0x00000003;
///</AutoGeneratedContent>

///<AutoGeneratedContent id="DataTypes">
#if !defined(_TC_TYPE_13C5ED93_554D_47D2_9A08_D46CC349EDDD_INCLUDED_)
#define _TC_TYPE_13C5ED93_554D_47D2_9A08_D46CC349EDDD_INCLUDED_
typedef struct _PanelInfo
{
	bool ServoOn;
	unsigned char reserved1;
	SHORT Handwheel_EnabledAxisNum;
	unsigned char reserved2[4];
	double Handwheel_Ratio;
	double Handwheel_dPos[5];
	SHORT Spindle_Cmd;
	bool Reset;
	bool Execute;
	unsigned char reserved3[4];
} PanelInfo, *PPanelInfo;
#endif // !defined(_TC_TYPE_13C5ED93_554D_47D2_9A08_D46CC349EDDD_INCLUDED_)

#if !defined(_TC_TYPE_9C29111D_2AB9_43BB_ACE9_11CADBF59920_INCLUDED_)
#define _TC_TYPE_9C29111D_2AB9_43BB_ACE9_11CADBF59920_INCLUDED_
typedef struct _SpindleRot
{
	double TargetVel;
} SpindleRot, *PSpindleRot;
#endif // !defined(_TC_TYPE_9C29111D_2AB9_43BB_ACE9_11CADBF59920_INCLUDED_)

#if !defined(_TC_TYPE_9689CD0C_E531_4687_BB83_6D4BB1F2F1CD_INCLUDED_)
#define _TC_TYPE_9689CD0C_E531_4687_BB83_6D4BB1F2F1CD_INCLUDED_
typedef struct _SpindleVelLimit
{
	double MaxVel;
	double MaxAcc;
	double MaxJerk;
} SpindleVelLimit, *PSpindleVelLimit;
#endif // !defined(_TC_TYPE_9689CD0C_E531_4687_BB83_6D4BB1F2F1CD_INCLUDED_)

#if !defined(_TC_TYPE_BEAC0974_F61C_4504_BEF4_0C5C6361CD2E_INCLUDED_)
#define _TC_TYPE_BEAC0974_F61C_4504_BEF4_0C5C6361CD2E_INCLUDED_
typedef struct _SpindlePosition
{
	double TargetPos;
	double TargetVel;
} SpindlePosition, *PSpindlePosition;
#endif // !defined(_TC_TYPE_BEAC0974_F61C_4504_BEF4_0C5C6361CD2E_INCLUDED_)

#if !defined(_TC_TYPE_DF678954_0CC7_4B57_A830_AD3AD6D5FFCE_INCLUDED_)
#define _TC_TYPE_DF678954_0CC7_4B57_A830_AD3AD6D5FFCE_INCLUDED_
enum SpindleState : SHORT {
	eSpindleIdle = 0,
	eSpindleInitialization = 1,
	eSpindleDisabled = 2,
	eSpindleEnable = 3,
	eSpindlePreMoving = 4,
	eSpindleRotating = 5,
	eSpindlePositioning = 6,
	eSpindlePostMoving = 7,
	eSpindleEmergency = 8,
	eSpindleFault = 9,
	eSpindleTest = 10
};
#endif // !defined(_TC_TYPE_DF678954_0CC7_4B57_A830_AD3AD6D5FFCE_INCLUDED_)

#if !defined(_TC_TYPE_F83D71B3_EDF7_41E0_B7AD_30BCAEB092E9_INCLUDED_)
#define _TC_TYPE_F83D71B3_EDF7_41E0_B7AD_30BCAEB092E9_INCLUDED_
enum AxisGroupState : SHORT {
	eAxisGroupIdle = 0,
	eAxisGroupInitialization = 1,
	eAxisGroupDisabled = 2,
	eAxisGroupPreStandby = 3,
	eAxisGroupStandby = 4,
	eAxisGroupManualMoving = 5,
	eAxisGroupPreContinuousMoving = 6,
	eAxisGroupContinuousMoving = 7,
	eAxisGroupLimitViolation = 8,
	eAxisGroupEmergency = 9,
	eAxisGroupFault = 10,
	eAxisGroupRecovery = 11,
	eAxisGroupTest = 12
};
#endif // !defined(_TC_TYPE_F83D71B3_EDF7_41E0_B7AD_30BCAEB092E9_INCLUDED_)

#if !defined(_TC_TYPE_75816603_8B01_41ED_9F49_1001E13236B1_INCLUDED_)
#define _TC_TYPE_75816603_8B01_41ED_9F49_1001E13236B1_INCLUDED_
enum OpMode : SHORT {
	CSP = 8,
	CSV = 9,
	CST = 10
};
#endif // !defined(_TC_TYPE_75816603_8B01_41ED_9F49_1001E13236B1_INCLUDED_)

typedef struct _ModuleTestParameter
{
	ULONG data1;
	ULONG data2;
	double data3;
} ModuleTestParameter, *PModuleTestParameter;

typedef struct _ModuleTestInputs
{
	PanelInfo MockPanel;
} ModuleTestInputs, *PModuleTestInputs;

typedef struct _ModuleTestOutputs
{
	struct {
		SHORT SelectedAxis;
		unsigned char reserved1[6];
		double MockCommandPos[5];
	} MockManualMovingCommand;
} ModuleTestOutputs, *PModuleTestOutputs;

///</AutoGeneratedContent>



///<AutoGeneratedContent id="DataAreaIDs">
#define ADI_ModuleTestInputs 0
#define ADI_ModuleTestOutputs 1
///</AutoGeneratedContent>

///<AutoGeneratedContent id="InterfaceIDs">
#if !defined(_TC_IID_CF8E28DE_CFD4_4727_86E6_C55D5891DD9F_INCLUDED_)
#define _TC_IID_CF8E28DE_CFD4_4727_86E6_C55D5891DD9F_INCLUDED_
TCOM_DECL_INTERFACE("cf8e28de-cfd4-4727-86e6-c55d5891dd9f", ISpindleInterface)
#endif // !defined(_TC_IID_CF8E28DE_CFD4_4727_86E6_C55D5891DD9F_INCLUDED_)

#if !defined(_TC_IID_08CC0D90_8987_4A20_A338_22772737A054_INCLUDED_)
#define _TC_IID_08CC0D90_8987_4A20_A338_22772737A054_INCLUDED_
TCOM_DECL_INTERFACE("08cc0d90-8987-4a20-a338-22772737a054", IAxisGroupInterface)
#endif // !defined(_TC_IID_08CC0D90_8987_4A20_A338_22772737A054_INCLUDED_)

///</AutoGeneratedContent>

///<AutoGeneratedContent id="EventClasses">
///</AutoGeneratedContent>
