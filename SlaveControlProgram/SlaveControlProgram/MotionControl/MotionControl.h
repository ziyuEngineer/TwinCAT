///////////////////////////////////////////////////////////////////////////////
// MotionControl.h
#pragma once

#include "MotionControlInterfaces.h"
#include "FiveAxisController.h"
#include "TcFileAccessInterfaces.h"
#include "tinyxml2.h"

using namespace tinyxml2;

class CMotionControl 
	: public ITComObject
	, public ITcADI
	, public ITcWatchSource
///<AutoGeneratedContent id="InheritanceList">
	, public ITcCyclic
///</AutoGeneratedContent>
{
public:
	DECLARE_IUNKNOWN()
	DECLARE_IPERSIST(CID_MotionControlCMotionControl)
	DECLARE_ITCOMOBJECT_LOCKOP()
	DECLARE_ITCADI()
	DECLARE_ITCWATCHSOURCE()
	DECLARE_OBJPARAWATCH_MAP()
	DECLARE_OBJDATAAREA_MAP()

	CMotionControl();
	virtual	~CMotionControl();


///<AutoGeneratedContent id="InterfaceMembers">
	// ITcCyclic
	virtual HRESULT TCOMAPI CycleUpdate(ITcTask* ipTask, ITcUnknown* ipCaller, ULONG_PTR context);

///</AutoGeneratedContent>

protected:
	DECLARE_ITCOMOBJECT_SETSTATE();

	HRESULT AddModuleToCaller();
	VOID RemoveModuleFromCaller();

	// Xml related variables
	UINT ReadFile(PCCH szFileNameRead, char* contents, UINT max_read);
	HRESULT ParseFileAndAssignValue(const char* _xml_group, const char* _xml_spindle);
	ITcFileAccessPtr m_spFileAccess;
	PCCH m_AxisGroupConfigPath = "%TC_RESOURCEPATH%AxisGroup.xml";
	PCCH m_SpindleConfigPath = "%TC_RESOURCEPATH%Spindle.xml";

	// Tracing
	CTcTrace m_Trace;

///<AutoGeneratedContent id="Members">
	TcTraceLevel m_TraceLevelMax;
	MotionControlParameter m_Parameter;
	ULONG m_CycleTime;
	MotionControlInputs m_Inputs;
	MotionControlOutputs m_Outputs;
	ITcCyclicCallerInfoPtr m_spCyclicCaller;
///</AutoGeneratedContent>

	CFiveAxisController m_Controller;
};
